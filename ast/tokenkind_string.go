// Code generated by "stringer -type=TokenKind -linecomment"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenEnd-0]
	_ = x[TokenString-1]
	_ = x[TokenSymbol-2]
	_ = x[TokenIdent-3]
	_ = x[TokenInt-4]
	_ = x[TokenFloat-5]
	_ = x[TokenComment-59]
	_ = x[TokenLambda-35]
	_ = x[TokenQuote-96]
	_ = x[TokenLeftPar-40]
	_ = x[TokenRightPar-41]
	_ = x[TokenLeftSquare-91]
	_ = x[TokenRightSquare-93]
}

const (
	_TokenKind_name_0 = "TokenEndstring:symbolTokenIdentintfloat"
	_TokenKind_name_1 = "#"
	_TokenKind_name_2 = "()"
	_TokenKind_name_3 = ";"
	_TokenKind_name_4 = "["
	_TokenKind_name_5 = "]"
	_TokenKind_name_6 = "`"
)

var (
	_TokenKind_index_0 = [...]uint8{0, 8, 14, 21, 31, 34, 39}
	_TokenKind_index_2 = [...]uint8{0, 1, 2}
)

func (i TokenKind) String() string {
	switch {
	case 0 <= i && i <= 5:
		return _TokenKind_name_0[_TokenKind_index_0[i]:_TokenKind_index_0[i+1]]
	case i == 35:
		return _TokenKind_name_1
	case 40 <= i && i <= 41:
		i -= 40
		return _TokenKind_name_2[_TokenKind_index_2[i]:_TokenKind_index_2[i+1]]
	case i == 59:
		return _TokenKind_name_3
	case i == 91:
		return _TokenKind_name_4
	case i == 93:
		return _TokenKind_name_5
	case i == 96:
		return _TokenKind_name_6
	default:
		return "TokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
